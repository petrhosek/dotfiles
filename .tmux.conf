# use vim keybindings in copy mode
set-window-option -g mode-keys vi

# act like Vim for copy and paste
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# act like Vim for selecting panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# no repeat for selecting panes
bind Up select-pane -U
bind Down select-pane -D
bind Left select-pane -L
bind Right select-pane -R

# open new windows in the same directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# quickly cycle through panes
bind-key C-b last-pane

# command sequence for nested session
bind-key b send-prefix

# start windows and panes at 1
set -g base-index 1
set -g pane-base-index 1

# reattach-to-user-namespace
if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'

# support for cliboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# support for xterm
set-option -g set-titles on
set-option -g set-titles-string '#H ###I.#P #W (#S)'

# for vim
set -g @resurrect-strategy-vim 'session'

# for neovim
set -g @resurrect-strategy-nvim 'session'

# restoring pane contents
set -g @resurrect-capture-pane-contents 'on'

# disable status bar content
set -g @nord_tmux_show_status_content "0"

run-shell "~/.tmux/themes/nord-tmux/nord.tmux"
run-shell "~/.tmux/plugins/tmux-sensible/sensible.tmux"
run-shell "~/.tmux/plugins/tmux-resurrect/resurrect.tmux"
run-shell "~/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux"
